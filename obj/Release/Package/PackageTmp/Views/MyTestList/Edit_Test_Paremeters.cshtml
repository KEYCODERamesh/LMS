@model IEnumerable<HospitalManagementSystem.TestParameterDT>

@{
    ViewBag.Title = "Edit_Test_Paremeters";
    Layout = "~/Views/Shared/_MainPageLayout.cshtml";
}

<h2>Edit_Test_Paremeters</h2>
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Add Tset Parameters</title>
    @*<link href="~/Content/assets/css/bootstrap.min.css" rel="stylesheet" />*@
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>
</head>
<body>
    <div class="page-body">
        <!-- Container-fluid starts-->
        <div class="container-fluid">
            <div class="page-body-wrapper">
                <div class="container-fluid">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.ActionLink("Test List", "Index", new object { }, new { @class = "btn btn-outline-primary fa fa-list" })
                                </div>
                                <div class="col-md-2">
                                    @Html.ActionLink("New Test", "Create", new object { }, new { @class = "btn btn-outline-primary fa fa-plus-circless" })
                                </div>

                                <div class="col-md-2">
                                    <a href="#" class="btn btn-outline-primary fa fa-plus-circless" data-toggle="modal" data-target="#AddModal">Test Panel</a>
                                </div>

                                <div class="col-md-2">
                                    <a href="#" class="btn btn-outline-primary fa fa-plus-circless" data-toggle="modal" data-target="#AddModal">Add Package</a>
                                </div>
                               
                            </div>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.Label("Tset Name", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-10">
                                            <h3>@ViewBag.TestName</h3>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.Label("Category Name", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-10">
                                            <h3>@ViewBag.CategoryName</h3>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <div class="form-group">
                                        <div class="col-md-10">
                                           
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <div class="form-group">
                                        <div class="col-md-10">
                                          
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <table id="tblCustomers" class="table" cellpadding="0" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th style="width:50px"> * Order</th>
                                        <th style="width:150px">* Parameter</th>
                                        <th style="width:150px">* Unit</th>
                                        <th style="width:150px">* Input Type</th>
                                        <th style="width:150px">* Default Value</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (TestParameterDT parameters in Model)
                                        {
                                    <tr>
                                        <td>
                                            @*@Html.EditorFor(modelItem => customer.Inorder, new { htmlAttributes = new { @class = "form-control" } })*@
                                            @parameters.Inorder
                                            @*<input type="text" value="@customer.Inorder" name="myOrderNos" class="form-control" />*@
                                        </td>
                                        
                                        <td>
                                            @parameters.TestParam.TrimStart()
                                            @*@Html.EditorFor(modelItem => customer.TestParam, new { htmlAttributes = new { @class = "form-control" } })*@
                                        </td>
                                        <td>
                                            @*Html.DropDownList("UnitList", new SelectList(ViewBag.UnitList, "Unit_ID", "Unit_Name"), parameters.Units, new { @class = "form-control form-select-sm form-select" })*@
                                            @parameters.Units
                                            @*@Html.DisplayFor(modelItem => customer.Units, new { htmlAttributes = new { @class = "form-control" } })*@

                                        </td>
                                        <td>
                                            @parameters.InputType
                                            @*@Html.DisplayFor(modelItem => customer.InputType, new { htmlAttributes = new { @class = "form-control" } })*@
                                            @*Html.DropDownList("Country", new List<SelectListItem> { new SelectListItem { Text = "Numeric", Value = "0" }, new SelectListItem { Text = "Single Line", Value = "1" } }, parameters.InputType, new { @class = "form-control form-select-sm form-select" })*@

                                        </td>
                                        <td>
                                            @parameters.DefaultResult
                                            @*@Html.EditorFor(modelItem => customer.DefaultResult, new { htmlAttributes = new { @class = "form-control" } })*@

                                        </td>
                                            <td><input type="button" value="Remove" onclick="Remove(this)" class="btn btn-danger" /></td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td><input type="text" id="txtorders" class="form-control" /></td>
                                        <td><input type="text" id="txtparameters" class="form-control" /></td>
                                        <td>
                                            @*<input type="text" id="txtunits" class="form-control" />*@
                                            @*@Html.DropDownList("PriorityID", (IEnumerable<SelectListItem>)ViewBag.PriorityID, new { @class = "dropdown" })*@
                                            @Html.DropDownList("UnitList", new SelectList(ViewBag.UnitList, "Unit_ID", "Unit_Name"), String.Empty, new { @class = "form-control form-select-sm form-select" })
                                        </td>
                                        <td>
                                            @Html.DropDownList("Country", new List<SelectListItem>  {
                                           //new SelectListItem { Text = " ", Value = "0" },
                                           new SelectListItem { Text = "Numeric", Value = "0" },
                                           new SelectListItem { Text = "Single Line", Value = "1" } },
                                           new { @class = "form-control form-select-sm form-select" })
                                        </td>
                                        <td><input type="text" id="txtdefaultvalues" class="form-control" /></td>
                                        <td><input type="button" id="btnAdd" value="Add More..." class="btn btn-outline-primary fa fa-plus-circless" style="font-size:20px" /></td>
                                    </tr>
                                </tfoot>
                            </table>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save" id="btnSave" class="btn btn-primary" />
                                    @*<input type="button" id="btnSave" value="Save All" />*@
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>



    <script type="text/javascript">
        $("body").on("click", "#btnAdd", function () {
            //Reference the Name and Country TextBoxes.
            var txtorders = $("#txtorders");
            var txtparameters = $("#txtparameters");
            var UnitList = $("#UnitList option:selected")
            var txtdefaultvalues = $("#txtdefaultvalues");
            var Country = $("#Country option:selected")
           /* if (txtorders.val() != "" && txtparameters.val() != "" && UnitList.val() != "" && Country.val() != "") {*/
                //Get the reference of the Table's TBODY element.
                var tBody = $("#tblCustomers > TBODY")[0];

                //Add Row.
                var row = tBody.insertRow(-1);

                //Add Order cell.
                var cell = $(row.insertCell(-1));
                cell.html(txtorders.val());

                //Add Parameters cell.
                cell = $(row.insertCell(-1));
                cell.html(txtparameters.val());

                //Add Units cell.
                cell = $(row.insertCell(-1));
                //cell.html(txtunits.val());
                cell.html(UnitList.text());

                //Add Input Types cell.
                cell = $(row.insertCell(-1));
                cell.html(Country.text());

                //cell.html(txtinputtypes.val());

                //var copycel = document.getElementById(inputtypes).innerHTML;
                //cell.html = copycel;

                //Add Default Values  cell.
                cell = $(row.insertCell(-1));
                cell.html(txtdefaultvalues.val());


                //Add Button cell.
                cell = $(row.insertCell(-1));
                var btnRemove = $("<input />");
                btnRemove.attr("type", "button");
                btnRemove.attr("class", "btn btn-outline-danger fa fa-trash")
                btnRemove.attr("onclick", "Remove(this);");
                btnRemove.val("Remove");
                cell.append(btnRemove);


                txtorders.val("");
                txtparameters.val("");
                UnitList.cell("");
                Country.cell("");
                txtdefaultvalues.val("");

                //var rowCount = $("#tblCustomers tr").length;
                //// alert(rowCount);
                //var x = document.getElementById('#tblCustomers');
                //var new_row = x.rows[rowCount].cloneNode(true);
                //var torders = new_row.cells[0].getElementById('#txtorders');
                //txtorders.value = rowCount;

                //var oTable = document.getElementById('tblCustomers');
                //var oCells = oTable.rows[rowCount].cells;
                //oCells[0].getElementById("#txtorders")[0].value = rowCount;
                //var rowCount = table.rows.length + 1;
                //txtorders.val(rowCount);
                //alert(rowCount);
            //}
            //else {
            //    alert("Must Enter Order,Parameter Name,Unit,Value Type...");
            //}
        });

        function Remove(button) {
            //Determine the reference of the Row using the Button.
            var row = $(button).closest("TR");
            var name = $("TD", row).eq(0).html();
            if (confirm("Do you want to delete: " + name)) {
                //Get the reference of the Table.
                var table = $("#tblCustomers")[0];

                //Delete the Table row using it's Index.
                table.deleteRow(row[0].rowIndex);
            }
        };

        $("body").on("click", "#btnSave", function () {
            //Loop through the Table rows and build a JSON array.
            var TestParameterDT = new Array();
          /*  var itemlist = [];*/
            $("#tblCustomers TBODY TR").each(function () {
                var row = $(this);
                var NewParameters = {};
                NewParameters.Inorder = row.find("TD").eq(0).html();
                NewParameters.TestParam = row.find("TD").eq(1).html();
                NewParameters.Units = row.find("TD").eq(2).html();
                NewParameters.InputType = row.find("TD").eq(3).html();
                NewParameters.DefaultResult = row.find("TD").eq(4).html();
                TestParameterDT.push(NewParameters);
                //NewParameters.Inorder =document.getElementById('customer_Inorder').value;
                //NewParameters.TestParam = document.getElementById('customer_TestParam').value;
                //NewParameters.Units = document.getElementById('UnitList').value;
                //NewParameters.InputType = document.getElementById('Country').value;
                //NewParameters.DefaultResult = document.getElementById('customer_DefaultResult').value;
                //var tdlist = $(this).find("td");
                //var Item = { Order: $(tdlist[0]).html(), ParameterName: $(tdlist[1]).html(), Unit: $(tdlist[2]).html(), InputType: $(tdlist[3]).html(), DefaultResult: $(tdlist[4]).html() };
                //itemlist.push(Item);
            });

            //Send the JSON array to Controller using AJAX.
            // data: JSON.stringify(JSON.parse(TestParameterDT)),
            $.ajax({
                type: "POST",
                url: "/MyTestList/Edit_Modify_TestParameterParameter",
                 data: JSON.stringify(TestParameterDT),               
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    //alert(r + " record(s) inserted.");
                }
            });
        });
    </script>
</body>
</html>