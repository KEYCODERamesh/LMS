@model HospitalManagementSystem.User_DT
@using HospitalManagementSystem.Models
@{
    ViewBag.Title = "AddUsers";
    Layout = "~/Views/Shared/_MainPageLayout.cshtml";
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>User List</title>


</head>
<body>
    <div class="page-body">
        <!-- Container-fluid starts-->
        <div class="container-fluid">
            <div class="page-body-wrapper">
                <div class="container-fluid">
                    <h2>AddUsers</h2>

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Modules, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(m => m.Modules, new SelectList(Enum.GetValues(typeof(UserModuleEnum))), "--Select Module--", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Modules, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.User_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.User_Name, new { htmlAttributes = new { @class = "form-control",placeholder = "ENTER USER NAME" } })
                                    @Html.ValidationMessageFor(model => model.User_Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>


                    <div class="row">
                        <div class="col-md-6">

                            <div class="form-group">
                                @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", placeholder = "ENTER MOBILE NO" } })
                                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.LoginID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.LoginID, new { htmlAttributes = new { @class = "form-control", placeholder = "ENTER LOGIN ID" } })
                                    @Html.ValidationMessageFor(model => model.LoginID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Old_Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Old_Password, new { htmlAttributes = new { @class = "form-control", placeholder = "ENTER OLD PASSWORD" } })
                                    @Html.ValidationMessageFor(model => model.Old_Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">

                            <div class="form-group">
                                @Html.LabelFor(model => model.New_Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.New_Password, new { htmlAttributes = new { @class = "form-control", placeholder = "ENTER NEW PASSWORD" } })
                                    @Html.ValidationMessageFor(model => model.New_Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Re_Password,"Confirm Pasword", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Re_Password, new { htmlAttributes = new { @class = "form-control", placeholder = "CONFIRM PASSWORD" } })
                                    @Html.ValidationMessageFor(model => model.Re_Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
             


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-outline-success-2x" />
                        </div>
                    </div>
                </div>
                    }

                    <div>
                        @Html.ActionLink("<< User List", "Userslists", new object { }, new { @class = "btn btn-info-gradien" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>