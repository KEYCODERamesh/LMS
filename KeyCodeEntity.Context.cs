//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HospitalManagementSystem
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HMSOnWebsEntities : DbContext
    {
        public HMSOnWebsEntities()
            : base("name=HMSOnWebsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<User_DT> User_DT { get; set; }
        public virtual DbSet<LabCompany> LabCompanies { get; set; }
        public virtual DbSet<GroupDT> GroupDTs { get; set; }
        public virtual DbSet<ReferalDT> ReferalDTs { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<VendorDT> VendorDTs { get; set; }
        public virtual DbSet<LabITEMDT> LabITEMDTs { get; set; }
        public virtual DbSet<LabPurchaseDT> LabPurchaseDTs { get; set; }
        public virtual DbSet<TestDT> TestDTs { get; set; }
        public virtual DbSet<UnitDT> UnitDTs { get; set; }
        public virtual DbSet<TestParameterDT> TestParameterDTs { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<ReferenceValuesDT> ReferenceValuesDTs { get; set; }
        public virtual DbSet<TestsPanel> TestsPanels { get; set; }
        public virtual DbSet<TestsPackagesDT> TestsPackagesDTs { get; set; }
        public virtual DbSet<Assigned_test_DT> Assigned_test_DT { get; set; }
        public virtual DbSet<AccHeadDT> AccHeadDTs { get; set; }
        public virtual DbSet<AccSubHeadsDT> AccSubHeadsDTs { get; set; }
        public virtual DbSet<ExPDT> ExPDTs { get; set; }
        public virtual DbSet<Pat_InvestList> Pat_InvestList { get; set; }
        public virtual DbSet<TestResultDT> TestResultDTs { get; set; }
    
        public virtual ObjectResult<SP_SEARCHUSERSROLES_Result> SP_SEARCHUSERSROLES(string lOGINID)
        {
            var lOGINIDParameter = lOGINID != null ?
                new ObjectParameter("LOGINID", lOGINID) :
                new ObjectParameter("LOGINID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SEARCHUSERSROLES_Result>("SP_SEARCHUSERSROLES", lOGINIDParameter);
        }
    
        public virtual ObjectResult<UserRole> SearchUserRoles(string lOGINID)
        {
            var lOGINIDParameter = lOGINID != null ?
                new ObjectParameter("LOGINID", lOGINID) :
                new ObjectParameter("LOGINID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserRole>("SearchUserRoles", lOGINIDParameter);
        }
    
        public virtual ObjectResult<UserRole> SearchUserRoles(string lOGINID, MergeOption mergeOption)
        {
            var lOGINIDParameter = lOGINID != null ?
                new ObjectParameter("LOGINID", lOGINID) :
                new ObjectParameter("LOGINID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserRole>("SearchUserRoles", mergeOption, lOGINIDParameter);
        }
    }
}
